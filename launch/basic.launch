<launch>

    <arg name="first_agent"  default="agent_00"/>
    <arg name="second_agent"  default="agent_01"/>
    <arg name="third_agent"  default="agent_02"/>
    <arg name="model" default="burger"/>
    <arg name="run_gazebo" default="true"/>
    <arg name="node_start_delay" default="0.0" />

    <arg name="run_rviz" default="true"/>
    <arg name="record_bag" default="false"/>
    <arg name="bag_name" default="test"/>

    <group ns="$(arg first_agent)">

        <node name="distributed_optimization" pkg="wta_distributed_optimization" type="ros_wrapper.py" output="screen"
              launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' ">
            <rosparam file="$(find wta_distributed_optimization)/params/target_position.yaml" />
            <rosparam>
                num_weapons: 3
                num_targets: 2
                max_iter: 1000
                primal_pub_prob: 0.5
                dual_pub_prob: 0.5
                delta: 0.01
                #rho:
                gamma: 1
            </rosparam>
            <remap from="goal_pose" to="setpoint"/>
        </node>

        <group if="$(arg run_gazebo)">
            <arg name="x_pos" default="0.0"/>
            <arg name="y_pos" default="0.0"/>
            <arg name="z_pos" default="0.0"/>
            <arg name="yaw"   default="0.0"/>
            <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
            <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
                <param name="publish_frequency" type="double" value="50.0" />
                <param name="tf_prefix" value="$(arg first_agent)" />
            </node>

            <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg first_agent) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -Y $(arg yaw) -param robot_description" />

            <rosparam command="load" file="$(find turtlebot_pid)/config/turtlebot_param_sim.yaml"/>
            <node name="controller" pkg="turtlebot_pid" type="turtlebot_pid_node" args="/$(arg first_agent)" output = "screen">
                <remap from="turtle_pose" to="odom"/>
                <remap from="turtle_goal" to="setpoint"/>
                <remap from="turtle_velocity_publisher" to="cmd_vel"/>
            </node>
        </group>
    </group>

    <group ns="$(arg second_agent)">
        <node name="distributed_optimization" pkg="wta_distributed_optimization" type="ros_wrapper.py" output="screen"
         launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' ">
            <rosparam file="$(find wta_distributed_optimization)/params/target_position.yaml" />
            <rosparam>
                num_weapons: 3
                num_targets: 2
                max_iter: 1000
                primal_pub_prob: 0.5
                dual_pub_prob: 0.5
                delta: 0.01
                #rho:
                gamma: 1
            </rosparam>
            <remap from="goal_pose" to="setpoint"/>
        </node>
        <group if="$(arg run_gazebo)">
            <arg name="x_pos" default="0.0"/>
            <arg name="y_pos" default="10.0"/>
            <arg name="z_pos" default="0.0"/>
            <arg name="yaw"   default="0.0"/>
            <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

            <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
                <param name="publish_frequency" type="double" value="50.0" />
                <param name="tf_prefix" value="$(arg second_agent)" />
            </node>

            <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg second_agent) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -Y $(arg yaw) -param robot_description" />

            <rosparam command="load" file="$(find turtlebot_pid)/config/turtlebot_param_sim.yaml"/>
            <node name="controller" pkg="turtlebot_pid" type="turtlebot_pid_node" args="/$(arg second_agent)" output = "screen">
                <remap from="turtle_pose" to="odom"/>
                <remap from="turtle_goal" to="setpoint"/>
                <remap from="turtle_velocity_publisher" to="cmd_vel"/>
            </node>
        </group>
    </group>

    <group ns="$(arg third_agent)">
        <node name="distributed_optimization" pkg="wta_distributed_optimization" type="ros_wrapper.py" output="screen"
         launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' ">
            <rosparam file="$(find wta_distributed_optimization)/params/target_position.yaml" />
            <rosparam>
                num_weapons: 3
                num_targets: 2
                max_iter: 1000
                primal_pub_prob: 0.5
                dual_pub_prob: 0.5
                delta: 0.01
                #rho:
                gamma: 1
            </rosparam>
            <remap from="goal_pose" to="setpoint"/>
        </node>
        <group if="$(arg run_gazebo)">
            <arg name="x_pos" default="10.0"/>
            <arg name="y_pos" default="0.0"/>
            <arg name="z_pos" default="0.0"/>
            <arg name="yaw"   default="0.0"/>
            <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

            <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
                <param name="publish_frequency" type="double" value="50.0" />
                <param name="tf_prefix" value="$(arg third_agent)" />
            </node>

            <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg third_agent) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -Y $(arg yaw) -param robot_description" />

            <rosparam command="load" file="$(find turtlebot_pid)/config/turtlebot_param_sim.yaml"/>
            <node name="controller" pkg="turtlebot_pid" type="turtlebot_pid_node" args="/$(arg third_agent)" output = "screen">
                <remap from="turtle_pose" to="odom"/>
                <remap from="turtle_goal" to="setpoint"/>
                <remap from="turtle_velocity_publisher" to="cmd_vel"/>
            </node>
        </group>
    </group>

    <node if="$(arg run_rviz)" name="rviz_node" pkg="rviz" type="rviz" output="log" args="-d $(find wta_distributed_optimization)/rviz/wta_demo.rviz"/>

    <node if="$(arg record_bag)" name="record" pkg="rosbag" type="record" args="-O $(arg bag_name) dual_0 dual_1 dual_2 primal_0 primal_1 primal_2 agent_00/setpoint agent_01/setpoint agent_02/setpoint" output="screen"/>

</launch>